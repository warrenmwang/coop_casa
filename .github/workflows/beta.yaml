name: Deploy Beta

on: 
  push: 
    branches: [ beta-deploy ]

jobs: 
  build:
    runs-on: ubuntu-latest
    environment: beta

    steps:
      - name: Deploy using ssh
        uses: appleboy/ssh-action@master
        with: 
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # Get Variables
            USER=${{ secrets.USERNAME }}
            
            # Change into the src dir
            cd /home/${USER}/deployment_repos/coop/coop_casa

            # Stop running docker services of old src
            docker compose down

            # Pull repo source
            git checkout beta-deploy
            git pull origin beta-deploy

            # SET ENV VARS

            # Proxy
            export EXTERNAL_PROXY_PORT=${{ secrets.EXTERNAL_PROXY_PORT }}

            # Both Proxy and Frontend
            export INTERNAL_FRONTEND_PORT=${{ secrets.INTERNAL_FRONTEND_PORT }}

            # Both Proxy and Backend
            export INTERNAL_BACKEND_PORT=${{ secrets.INTERNAL_BACKEND_PORT }}

            # Backend
            export EXTERNAL_FRONTEND_PORT=${{ secrets.EXTERNAL_FRONTEND_PORT }}

            export IS_PROD=true
            export PROD_HOST=${{ secrets.PROD_HOST }}

            export ADMIN_USER_ID=${{ secrets.ADMIN_USER_ID }}
            export JWT_SIGN_SECRET=${{ secrets.JWT_SIGN_SECRET }}
            export AUTH_KEY_SECRET=${{ secrets.AUTH_KEY_SECRET }}
            export DB_ENCRYPT_KEY_SECRET=${{ secrets.DB_ENCRYPT_KEY_SECRET }}

            export DB_HOST=${{ secrets.DB_HOST }}
            export DB_PORT=${{ secrets.DB_PORT }}
            export DB_DATABASE=${{ secrets.DB_DATABASE }}
            export DB_USERNAME=${{ secrets.DB_USERNAME }}
            export DB_PASSWORD=${{ secrets.DB_PASSWORD }}

            export GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            export GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}

            # Frontend
            export REACT_APP_IS_PROD=true
            export REACT_APP_API_PROD_HOST=${{ secrets.REACT_APP_API_PROD_HOST }}
            export REACT_APP_API_PORT=${{ secrets.REACT_APP_API_PORT }}

            # Run all as docker containers (db, backend, frontend, proxy)
            docker compose build
            docker compose up -d --remove-orphans